{"title":"建造者模式","slug":"DesignPatterns-builder","date":"2022-12-21T16:00:00.000Z","updated":"2024-12-03T07:22:26.000Z","comments":true,"path":"api/articles/DesignPatterns-builder.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/Builder.jpg"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>造者模式(Builder Pattern)：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。</p>\n<p>建造者模式是一步一步创建一个复杂的对象，它允许用户只通过指定复杂对象的类型和内容就可以构建它们，用户不需要知道内部的具体构建细节。建造者模式属于对象创建型模式。根据中文翻译的不同，建造者模式又可以称为生成器模式。</p>\n<h3 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h3><p>建造者模式包含如下角色：</p>\n<ul>\n<li>Builder：抽象建造者</li>\n<li>ConcreteBuilder：具体建造者</li>\n<li>Director：指挥者</li>\n<li>Product：产品角色</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/Builder.jpg\" alt=\"Builder\"></p>\n<p>代码示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 抽奖建造者</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Builder</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Builder</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体建筑者</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ConcreteBuilder</span> : <span class=\"keyword\">public</span> Builder</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">ConcreteBuilder</span>()&#123;&#125;;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">buildPartA</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tm_prod-&gt;<span class=\"built_in\">setA</span>(<span class=\"string\">&quot;A Style &quot;</span>); <span class=\"comment\">//不同的建造者，可以实现不同产品的建造  </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"type\">void</span> :<span class=\"built_in\">buildPartB</span>()&#123;</span><br><span class=\"line\">\tm_prod-&gt;<span class=\"built_in\">setB</span>(<span class=\"string\">&quot;B Style &quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">buildPartC</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tm_prod-&gt;<span class=\"built_in\">setC</span>(<span class=\"string\">&quot;C style &quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 指挥者</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Director</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Director</span>()&#123;&#125;;</span><br><span class=\"line\">    <span class=\"function\">Product* <span class=\"title\">constuct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tm_pbuilder-&gt;<span class=\"built_in\">buildPartA</span>();</span><br><span class=\"line\">\tm_pbuilder-&gt;<span class=\"built_in\">buildPartB</span>();</span><br><span class=\"line\">\tm_pbuilder-&gt;<span class=\"built_in\">buildPartC</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> m_pbuilder-&gt;<span class=\"built_in\">getResult</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setBuilder</span><span class=\"params\">(Builder* buider)</span></span>&#123;</span><br><span class=\"line\">\tm_pbuilder = buider;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span>：</span><br><span class=\"line\">    Builder* m_pbuilder;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 主函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ConcreteBuilder * builder = <span class=\"keyword\">new</span> <span class=\"built_in\">ConcreteBuilder</span>();</span><br><span class=\"line\">\tDirector  director;</span><br><span class=\"line\">\tdirector.<span class=\"built_in\">setBuilder</span>(builder);</span><br><span class=\"line\">\tProduct * pd =  director.<span class=\"built_in\">constuct</span>();</span><br><span class=\"line\">\tpd-&gt;<span class=\"built_in\">show</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> builder;</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> pd;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在以下情况下可以使用建造者模式：</p>\n<ul>\n<li>需要生成的产品对象有复杂的内部结构，这些产品对象通常包含多个成员属性。</li>\n<li>需要生成的产品对象的属性相互依赖，需要指定其生成顺序。</li>\n<li>对象的创建过程独立于创建该对象的类。在建造者模式中引入了指挥者类，将创建过程封装在指挥者类中，而不在建造者类中。</li>\n<li>隔离复杂对象的创建和使用，并使得相同的创建过程可以创建不同的产品。</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>建造者模式将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。建造者模式是一步一步创建一个复杂的对象，它允许用户只通过指定复杂对象的类型和内容就可以构建它们，用户不需要知道内部的具体构建细节。建造者模式属于对象创建型模式。</li>\n<li>建造者模式包含如下四个角色：抽象建造者为创建一个产品对象的各个部件指定抽象接口；具体建造者实现了抽象建造者接口，实现各个部件的构造和装配方法，定义并明确它所创建的复杂对象，也可以提供一个方法返回创建好的复杂产品对象；产品角色是被构建的复杂对象，包含多个组成部件；指挥者负责安排复杂对象的建造次序，指挥者与抽象建造者之间存在关联关系，可以在其construct()建造方法中调用建造者对象的部件构造与装配方法，完成复杂对象的建造</li>\n<li>在建造者模式的结构中引入了一个指挥者类，该类的作用主要有两个：一方面它隔离了客户与生产过程；另一方面它负责控制产品的生成过程。指挥者针对抽象建造者编程，客户端只需要知道具体建造者的类型，即可通过指挥者类调用建造者的相关方法，返回一个完整的产品对象。</li>\n<li>建造者模式的主要优点在于客户端不必知道产品内部组成的细节，将产品本身与产品的创建过程解耦，使得相同的创建过程可以创建不同的产品对象，每一个具体建造者都相对独立，而与其他的具体建造者无关，因此可以很方便地替换具体建造者或增加新的具体建造者，符合“开闭原则”，还可以更加精细地控制产品的创建过程；其主要缺点在于由于建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，因此其使用范围受到一定的限制，如果产品的内部变化复杂，可能会导致需要定义很多具体建造者类来实现这种变化，导致系统变得很庞大。</li>\n<li>建造者模式适用情况包括：需要生成的产品对象有复杂的内部结构，这些产品对象通常包含多个成员属性；需要生成的产品对象的属性相互依赖，需要指定其生成顺序；对象的创建过程独立于创建该对象的类；隔离复杂对象的创建和使用，并使得相同的创建过程可以创建不同类型的产品。</li>\n</ul>\n<p>参考资料：<a href=\"https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/builder.html\">https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/builder.html</a></p>\n","more":"<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>造者模式(Builder Pattern)：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。</p>\n<p>建造者模式是一步一步创建一个复杂的对象，它允许用户只通过指定复杂对象的类型和内容就可以构建它们，用户不需要知道内部的具体构建细节。建造者模式属于对象创建型模式。根据中文翻译的不同，建造者模式又可以称为生成器模式。</p>\n<h3 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h3><p>建造者模式包含如下角色：</p>\n<ul>\n<li>Builder：抽象建造者</li>\n<li>ConcreteBuilder：具体建造者</li>\n<li>Director：指挥者</li>\n<li>Product：产品角色</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/Builder.jpg\" alt=\"Builder\"></p>\n<p>代码示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 抽奖建造者</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Builder</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Builder</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体建筑者</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ConcreteBuilder</span> : <span class=\"keyword\">public</span> Builder</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">ConcreteBuilder</span>()&#123;&#125;;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">buildPartA</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tm_prod-&gt;<span class=\"built_in\">setA</span>(<span class=\"string\">&quot;A Style &quot;</span>); <span class=\"comment\">//不同的建造者，可以实现不同产品的建造  </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"type\">void</span> :<span class=\"built_in\">buildPartB</span>()&#123;</span><br><span class=\"line\">\tm_prod-&gt;<span class=\"built_in\">setB</span>(<span class=\"string\">&quot;B Style &quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">     <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">buildPartC</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tm_prod-&gt;<span class=\"built_in\">setC</span>(<span class=\"string\">&quot;C style &quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 指挥者</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Director</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">Director</span>()&#123;&#125;;</span><br><span class=\"line\">    <span class=\"function\">Product* <span class=\"title\">constuct</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tm_pbuilder-&gt;<span class=\"built_in\">buildPartA</span>();</span><br><span class=\"line\">\tm_pbuilder-&gt;<span class=\"built_in\">buildPartB</span>();</span><br><span class=\"line\">\tm_pbuilder-&gt;<span class=\"built_in\">buildPartC</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> m_pbuilder-&gt;<span class=\"built_in\">getResult</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setBuilder</span><span class=\"params\">(Builder* buider)</span></span>&#123;</span><br><span class=\"line\">\tm_pbuilder = buider;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span>：</span><br><span class=\"line\">    Builder* m_pbuilder;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 主函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ConcreteBuilder * builder = <span class=\"keyword\">new</span> <span class=\"built_in\">ConcreteBuilder</span>();</span><br><span class=\"line\">\tDirector  director;</span><br><span class=\"line\">\tdirector.<span class=\"built_in\">setBuilder</span>(builder);</span><br><span class=\"line\">\tProduct * pd =  director.<span class=\"built_in\">constuct</span>();</span><br><span class=\"line\">\tpd-&gt;<span class=\"built_in\">show</span>();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> builder;</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> pd;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在以下情况下可以使用建造者模式：</p>\n<ul>\n<li>需要生成的产品对象有复杂的内部结构，这些产品对象通常包含多个成员属性。</li>\n<li>需要生成的产品对象的属性相互依赖，需要指定其生成顺序。</li>\n<li>对象的创建过程独立于创建该对象的类。在建造者模式中引入了指挥者类，将创建过程封装在指挥者类中，而不在建造者类中。</li>\n<li>隔离复杂对象的创建和使用，并使得相同的创建过程可以创建不同的产品。</li>\n</ul>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>建造者模式将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。建造者模式是一步一步创建一个复杂的对象，它允许用户只通过指定复杂对象的类型和内容就可以构建它们，用户不需要知道内部的具体构建细节。建造者模式属于对象创建型模式。</li>\n<li>建造者模式包含如下四个角色：抽象建造者为创建一个产品对象的各个部件指定抽象接口；具体建造者实现了抽象建造者接口，实现各个部件的构造和装配方法，定义并明确它所创建的复杂对象，也可以提供一个方法返回创建好的复杂产品对象；产品角色是被构建的复杂对象，包含多个组成部件；指挥者负责安排复杂对象的建造次序，指挥者与抽象建造者之间存在关联关系，可以在其construct()建造方法中调用建造者对象的部件构造与装配方法，完成复杂对象的建造</li>\n<li>在建造者模式的结构中引入了一个指挥者类，该类的作用主要有两个：一方面它隔离了客户与生产过程；另一方面它负责控制产品的生成过程。指挥者针对抽象建造者编程，客户端只需要知道具体建造者的类型，即可通过指挥者类调用建造者的相关方法，返回一个完整的产品对象。</li>\n<li>建造者模式的主要优点在于客户端不必知道产品内部组成的细节，将产品本身与产品的创建过程解耦，使得相同的创建过程可以创建不同的产品对象，每一个具体建造者都相对独立，而与其他的具体建造者无关，因此可以很方便地替换具体建造者或增加新的具体建造者，符合“开闭原则”，还可以更加精细地控制产品的创建过程；其主要缺点在于由于建造者模式所创建的产品一般具有较多的共同点，其组成部分相似，因此其使用范围受到一定的限制，如果产品的内部变化复杂，可能会导致需要定义很多具体建造者类来实现这种变化，导致系统变得很庞大。</li>\n<li>建造者模式适用情况包括：需要生成的产品对象有复杂的内部结构，这些产品对象通常包含多个成员属性；需要生成的产品对象的属性相互依赖，需要指定其生成顺序；对象的创建过程独立于创建该对象的类；隔离复杂对象的创建和使用，并使得相同的创建过程可以创建不同类型的产品。</li>\n</ul>\n<p>参考资料：<a href=\"https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/builder.html\">https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/builder.html</a></p>\n","categories":[{"name":"设计模式","path":"api/categories/设计模式.json"}],"tags":[{"name":"C++","path":"api/tags/C++.json"},{"name":"设计模式","path":"api/tags/设计模式.json"}]}