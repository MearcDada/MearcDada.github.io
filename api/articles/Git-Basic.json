{"title":"Git的使用方法","slug":"Git-Basic","date":"2022-11-28T16:00:00.000Z","updated":"2024-12-03T07:22:26.000Z","comments":true,"path":"api/articles/Git-Basic.json","excerpt":null,"covers":null,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"git常用命令\"><a href=\"#git常用命令\" class=\"headerlink\" title=\"git常用命令\"></a>git常用命令</h1><table>\n<thead>\n<tr>\n<th>命令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git config –global user.name 用户名</td>\n<td>设置用户签名</td>\n</tr>\n<tr>\n<td>git config –global user.name 邮箱</td>\n<td>设置用户签名</td>\n</tr>\n<tr>\n<td>git init</td>\n<td>初始化本地库</td>\n</tr>\n<tr>\n<td>git status</td>\n<td>查看本地库状态</td>\n</tr>\n<tr>\n<td>git add 文件名</td>\n<td>添加到暂存区</td>\n</tr>\n<tr>\n<td>git commit -m ‘日志信息’ 文件名</td>\n<td>提交到本地库</td>\n</tr>\n<tr>\n<td>git reflog</td>\n<td>查看历史记录</td>\n</tr>\n<tr>\n<td>git rest –hard 版本号</td>\n<td>版本穿梭</td>\n</tr>\n</tbody></table>\n<h2 id=\"初始化本地库\"><a href=\"#初始化本地库\" class=\"headerlink\" title=\"初始化本地库\"></a>初始化本地库</h2><blockquote>\n<p>git init</p>\n</blockquote>\n<h2 id=\"查看本地库状态\"><a href=\"#查看本地库状态\" class=\"headerlink\" title=\"查看本地库状态\"></a>查看本地库状态</h2><blockquote>\n<p>git status</p>\n</blockquote>\n<h2 id=\"添加暂存区\"><a href=\"#添加暂存区\" class=\"headerlink\" title=\"添加暂存区\"></a>添加暂存区</h2><blockquote>\n<p>git add 文件名</p>\n</blockquote>\n<h3 id=\"删除暂存区文件\"><a href=\"#删除暂存区文件\" class=\"headerlink\" title=\"删除暂存区文件\"></a>删除暂存区文件</h3><blockquote>\n<p>git rm –cached 文件名</p>\n</blockquote>\n<h2 id=\"提交本地库\"><a href=\"#提交本地库\" class=\"headerlink\" title=\"提交本地库\"></a>提交本地库</h2><blockquote>\n<p>git commit -m ‘first commit’ 文件名 </p>\n</blockquote>\n<h2 id=\"穿梭版本号\"><a href=\"#穿梭版本号\" class=\"headerlink\" title=\"穿梭版本号\"></a>穿梭版本号</h2><p>通过git reflog 查看版本号，然后使用git reset –hard 版本号</p>\n<h1 id=\"分支操作\"><a href=\"#分支操作\" class=\"headerlink\" title=\"分支操作\"></a>分支操作</h1><table>\n<thead>\n<tr>\n<th>命令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git branch 分支名</td>\n<td>创建分支</td>\n</tr>\n<tr>\n<td>git branch -v</td>\n<td>查看分支</td>\n</tr>\n<tr>\n<td>git checkout 分支名</td>\n<td>切换分支</td>\n</tr>\n<tr>\n<td>git merge 分支名</td>\n<td>把指定 的分支合并到当前分支上</td>\n</tr>\n<tr>\n<td>git checkout -b 新分支名称</td>\n<td>在当前分支创建一个新的分支</td>\n</tr>\n</tbody></table>\n<h2 id=\"合并冲突\"><a href=\"#合并冲突\" class=\"headerlink\" title=\"合并冲突\"></a>合并冲突</h2><p>合并分支时，两个分支在同一个文件的同一个位置有两套完全不同的修改，git无法决定，必须人为决定新代码内容。</p>\n<blockquote>\n<p>打开文件进行手动修改</p>\n</blockquote>\n<p>再进行添加暂存区，提交本地库，不要带文件名 git commint -m ‘ ‘</p>\n<h1 id=\"GitHub操作\"><a href=\"#GitHub操作\" class=\"headerlink\" title=\"GitHub操作\"></a>GitHub操作</h1><h2 id=\"远程仓库操作\"><a href=\"#远程仓库操作\" class=\"headerlink\" title=\"远程仓库操作\"></a>远程仓库操作</h2><table>\n<thead>\n<tr>\n<th>命令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git remote -v</td>\n<td>查看当前所有远程地址别名</td>\n</tr>\n<tr>\n<td>git remote add 别名 远程地址</td>\n<td>起别名</td>\n</tr>\n<tr>\n<td>git push 别名 分支</td>\n<td>推送本地分支上的内容到远程仓库</td>\n</tr>\n<tr>\n<td>git clone 远程地址</td>\n<td>将远程仓库的内容克隆到本地</td>\n</tr>\n<tr>\n<td>git pull 远程库地址别名 远程分支名</td>\n<td>将远程仓库对于分支最新内容拉下来后与当前本地分支直接合并</td>\n</tr>\n</tbody></table>\n<h2 id=\"团队协作\"><a href=\"#团队协作\" class=\"headerlink\" title=\"团队协作\"></a>团队协作</h2><p>添加操作仓库成员</p>\n<p>settings-&gt;Collaboraors-&gt;add people</p>\n<p>发送链接</p>\n<p>fork：将别人仓库拉取到自己仓库</p>\n<p>推送到别人仓库：pull requests-&gt;new pull request -&gt;create pull request-&gt;create pull request</p>\n<p>申请合并提交申请：Merge pull request-&gt;comfirm merge</p>\n<h2 id=\"免密登录\"><a href=\"#免密登录\" class=\"headerlink\" title=\"免密登录\"></a>免密登录</h2><h1 id=\"idea集成git\"><a href=\"#idea集成git\" class=\"headerlink\" title=\"idea集成git\"></a>idea集成git</h1><h2 id=\"配置git忽略文件\"><a href=\"#配置git忽略文件\" class=\"headerlink\" title=\"配置git忽略文件\"></a>配置git忽略文件</h2><ol>\n<li><p>创建忽略规则文件 xxxx.ignore(前缀名随便起，建议是git.ignore)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.log</span><br><span class=\"line\">.jar</span><br></pre></td></tr></table></figure></li>\n<li><p>在.gitconfig文件中引用忽略配置文件（此文件在windows的家目录中）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[core]</span><br><span class=\"line\">\texcludesfile= C:/User/asus/git.ignore</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"idea初始化本地库\"><a href=\"#idea初始化本地库\" class=\"headerlink\" title=\"idea初始化本地库\"></a>idea初始化本地库</h2><ol>\n<li>初始化本地库：VCS-&gt;import-&gt;version-&gt;control-&gt;create git repository</li>\n<li>添加到暂存区：git-&gt;add</li>\n<li>commit directory</li>\n<li>commit</li>\n</ol>\n<h2 id=\"idea切换版本\"><a href=\"#idea切换版本\" class=\"headerlink\" title=\"idea切换版本\"></a>idea切换版本</h2><p>右击版本，checkout Revision </p>\n<h2 id=\"idea创建分支\"><a href=\"#idea创建分支\" class=\"headerlink\" title=\"idea创建分支\"></a>idea创建分支</h2><p>git-&gt;Repository-&gt;Branches</p>\n<h2 id=\"idea合并分支\"><a href=\"#idea合并分支\" class=\"headerlink\" title=\"idea合并分支\"></a>idea合并分支</h2><p>合并到当前分支：右下角点击分支-&gt;merge into current</p>\n<h2 id=\"idea合并冲突分支\"><a href=\"#idea合并冲突分支\" class=\"headerlink\" title=\"idea合并冲突分支\"></a>idea合并冲突分支</h2><ol>\n<li>右下角点击分支-&gt;merge into current</li>\n<li>merge-&gt;手动选择（左边master，右边分支代码，中间没有冲突的代码）</li>\n</ol>\n<h2 id=\"idea代码推送到远程仓库\"><a href=\"#idea代码推送到远程仓库\" class=\"headerlink\" title=\"idea代码推送到远程仓库\"></a>idea代码推送到远程仓库</h2><p>push-&gt;点击中间地址或别名，点击（define remote），输入ssh的url（可以不用设置）-&gt;push</p>\n<p>注意：push是将本地库代码推送到远程库，如果本地库代码跟远程库代码版本不一致，push的操作是会被拒绝的。也就是说，想要铺设成功，一定要保证本地库的版本要比远程库的版本高。如果本地库的代码版本已经落后，切记要先pull拉取一下远程库的代码，将本地代码更新到最新后，然后再修改，提交，推送</p>\n<h2 id=\"远程拉取\"><a href=\"#远程拉取\" class=\"headerlink\" title=\"远程拉取\"></a>远程拉取</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"拉取子模块\"><a href=\"#拉取子模块\" class=\"headerlink\" title=\"拉取子模块\"></a>拉取子模块</h3><p>首次克隆仓库及其模块</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> --recursive https://XXX</span><br></pre></td></tr></table></figure>\n<p>首次拉取模块</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git submodule update --init --recursive</span><br><span class=\"line\"></span><br><span class=\"line\">// 更新单个子模块xxx</span><br><span class=\"line\">git submodule update --init xxx</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>更新子模块</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 适用于git 1.8.2及以上版本</span><br><span class=\"line\">git submodule update --recursive --remote</span><br><span class=\"line\"></span><br><span class=\"line\">// 适用于git 1.7.3及以上版本</span><br><span class=\"line\">git submodule update --recursive</span><br><span class=\"line\">//或者</span><br><span class=\"line\">git pull --recurse-submodules</span><br></pre></td></tr></table></figure>\n\n<p>注意：pull是拉取远端仓库代码到本地，如果远程代码和本地库代码不一致，会自动合并，如果自动合并失败，还会涉及到手都冻解决冲突的问题。</p>\n","more":"<h1 id=\"git常用命令\"><a href=\"#git常用命令\" class=\"headerlink\" title=\"git常用命令\"></a>git常用命令</h1><table>\n<thead>\n<tr>\n<th>命令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git config –global user.name 用户名</td>\n<td>设置用户签名</td>\n</tr>\n<tr>\n<td>git config –global user.name 邮箱</td>\n<td>设置用户签名</td>\n</tr>\n<tr>\n<td>git init</td>\n<td>初始化本地库</td>\n</tr>\n<tr>\n<td>git status</td>\n<td>查看本地库状态</td>\n</tr>\n<tr>\n<td>git add 文件名</td>\n<td>添加到暂存区</td>\n</tr>\n<tr>\n<td>git commit -m ‘日志信息’ 文件名</td>\n<td>提交到本地库</td>\n</tr>\n<tr>\n<td>git reflog</td>\n<td>查看历史记录</td>\n</tr>\n<tr>\n<td>git rest –hard 版本号</td>\n<td>版本穿梭</td>\n</tr>\n</tbody></table>\n<h2 id=\"初始化本地库\"><a href=\"#初始化本地库\" class=\"headerlink\" title=\"初始化本地库\"></a>初始化本地库</h2><blockquote>\n<p>git init</p>\n</blockquote>\n<h2 id=\"查看本地库状态\"><a href=\"#查看本地库状态\" class=\"headerlink\" title=\"查看本地库状态\"></a>查看本地库状态</h2><blockquote>\n<p>git status</p>\n</blockquote>\n<h2 id=\"添加暂存区\"><a href=\"#添加暂存区\" class=\"headerlink\" title=\"添加暂存区\"></a>添加暂存区</h2><blockquote>\n<p>git add 文件名</p>\n</blockquote>\n<h3 id=\"删除暂存区文件\"><a href=\"#删除暂存区文件\" class=\"headerlink\" title=\"删除暂存区文件\"></a>删除暂存区文件</h3><blockquote>\n<p>git rm –cached 文件名</p>\n</blockquote>\n<h2 id=\"提交本地库\"><a href=\"#提交本地库\" class=\"headerlink\" title=\"提交本地库\"></a>提交本地库</h2><blockquote>\n<p>git commit -m ‘first commit’ 文件名 </p>\n</blockquote>\n<h2 id=\"穿梭版本号\"><a href=\"#穿梭版本号\" class=\"headerlink\" title=\"穿梭版本号\"></a>穿梭版本号</h2><p>通过git reflog 查看版本号，然后使用git reset –hard 版本号</p>\n<h1 id=\"分支操作\"><a href=\"#分支操作\" class=\"headerlink\" title=\"分支操作\"></a>分支操作</h1><table>\n<thead>\n<tr>\n<th>命令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git branch 分支名</td>\n<td>创建分支</td>\n</tr>\n<tr>\n<td>git branch -v</td>\n<td>查看分支</td>\n</tr>\n<tr>\n<td>git checkout 分支名</td>\n<td>切换分支</td>\n</tr>\n<tr>\n<td>git merge 分支名</td>\n<td>把指定 的分支合并到当前分支上</td>\n</tr>\n<tr>\n<td>git checkout -b 新分支名称</td>\n<td>在当前分支创建一个新的分支</td>\n</tr>\n</tbody></table>\n<h2 id=\"合并冲突\"><a href=\"#合并冲突\" class=\"headerlink\" title=\"合并冲突\"></a>合并冲突</h2><p>合并分支时，两个分支在同一个文件的同一个位置有两套完全不同的修改，git无法决定，必须人为决定新代码内容。</p>\n<blockquote>\n<p>打开文件进行手动修改</p>\n</blockquote>\n<p>再进行添加暂存区，提交本地库，不要带文件名 git commint -m ‘ ‘</p>\n<h1 id=\"GitHub操作\"><a href=\"#GitHub操作\" class=\"headerlink\" title=\"GitHub操作\"></a>GitHub操作</h1><h2 id=\"远程仓库操作\"><a href=\"#远程仓库操作\" class=\"headerlink\" title=\"远程仓库操作\"></a>远程仓库操作</h2><table>\n<thead>\n<tr>\n<th>命令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git remote -v</td>\n<td>查看当前所有远程地址别名</td>\n</tr>\n<tr>\n<td>git remote add 别名 远程地址</td>\n<td>起别名</td>\n</tr>\n<tr>\n<td>git push 别名 分支</td>\n<td>推送本地分支上的内容到远程仓库</td>\n</tr>\n<tr>\n<td>git clone 远程地址</td>\n<td>将远程仓库的内容克隆到本地</td>\n</tr>\n<tr>\n<td>git pull 远程库地址别名 远程分支名</td>\n<td>将远程仓库对于分支最新内容拉下来后与当前本地分支直接合并</td>\n</tr>\n</tbody></table>\n<h2 id=\"团队协作\"><a href=\"#团队协作\" class=\"headerlink\" title=\"团队协作\"></a>团队协作</h2><p>添加操作仓库成员</p>\n<p>settings-&gt;Collaboraors-&gt;add people</p>\n<p>发送链接</p>\n<p>fork：将别人仓库拉取到自己仓库</p>\n<p>推送到别人仓库：pull requests-&gt;new pull request -&gt;create pull request-&gt;create pull request</p>\n<p>申请合并提交申请：Merge pull request-&gt;comfirm merge</p>\n<h2 id=\"免密登录\"><a href=\"#免密登录\" class=\"headerlink\" title=\"免密登录\"></a>免密登录</h2><h1 id=\"idea集成git\"><a href=\"#idea集成git\" class=\"headerlink\" title=\"idea集成git\"></a>idea集成git</h1><h2 id=\"配置git忽略文件\"><a href=\"#配置git忽略文件\" class=\"headerlink\" title=\"配置git忽略文件\"></a>配置git忽略文件</h2><ol>\n<li><p>创建忽略规则文件 xxxx.ignore(前缀名随便起，建议是git.ignore)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.log</span><br><span class=\"line\">.jar</span><br></pre></td></tr></table></figure></li>\n<li><p>在.gitconfig文件中引用忽略配置文件（此文件在windows的家目录中）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[core]</span><br><span class=\"line\">\texcludesfile= C:/User/asus/git.ignore</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"idea初始化本地库\"><a href=\"#idea初始化本地库\" class=\"headerlink\" title=\"idea初始化本地库\"></a>idea初始化本地库</h2><ol>\n<li>初始化本地库：VCS-&gt;import-&gt;version-&gt;control-&gt;create git repository</li>\n<li>添加到暂存区：git-&gt;add</li>\n<li>commit directory</li>\n<li>commit</li>\n</ol>\n<h2 id=\"idea切换版本\"><a href=\"#idea切换版本\" class=\"headerlink\" title=\"idea切换版本\"></a>idea切换版本</h2><p>右击版本，checkout Revision </p>\n<h2 id=\"idea创建分支\"><a href=\"#idea创建分支\" class=\"headerlink\" title=\"idea创建分支\"></a>idea创建分支</h2><p>git-&gt;Repository-&gt;Branches</p>\n<h2 id=\"idea合并分支\"><a href=\"#idea合并分支\" class=\"headerlink\" title=\"idea合并分支\"></a>idea合并分支</h2><p>合并到当前分支：右下角点击分支-&gt;merge into current</p>\n<h2 id=\"idea合并冲突分支\"><a href=\"#idea合并冲突分支\" class=\"headerlink\" title=\"idea合并冲突分支\"></a>idea合并冲突分支</h2><ol>\n<li>右下角点击分支-&gt;merge into current</li>\n<li>merge-&gt;手动选择（左边master，右边分支代码，中间没有冲突的代码）</li>\n</ol>\n<h2 id=\"idea代码推送到远程仓库\"><a href=\"#idea代码推送到远程仓库\" class=\"headerlink\" title=\"idea代码推送到远程仓库\"></a>idea代码推送到远程仓库</h2><p>push-&gt;点击中间地址或别名，点击（define remote），输入ssh的url（可以不用设置）-&gt;push</p>\n<p>注意：push是将本地库代码推送到远程库，如果本地库代码跟远程库代码版本不一致，push的操作是会被拒绝的。也就是说，想要铺设成功，一定要保证本地库的版本要比远程库的版本高。如果本地库的代码版本已经落后，切记要先pull拉取一下远程库的代码，将本地代码更新到最新后，然后再修改，提交，推送</p>\n<h2 id=\"远程拉取\"><a href=\"#远程拉取\" class=\"headerlink\" title=\"远程拉取\"></a>远程拉取</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"拉取子模块\"><a href=\"#拉取子模块\" class=\"headerlink\" title=\"拉取子模块\"></a>拉取子模块</h3><p>首次克隆仓库及其模块</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> --recursive https://XXX</span><br></pre></td></tr></table></figure>\n<p>首次拉取模块</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git submodule update --init --recursive</span><br><span class=\"line\"></span><br><span class=\"line\">// 更新单个子模块xxx</span><br><span class=\"line\">git submodule update --init xxx</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>更新子模块</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 适用于git 1.8.2及以上版本</span><br><span class=\"line\">git submodule update --recursive --remote</span><br><span class=\"line\"></span><br><span class=\"line\">// 适用于git 1.7.3及以上版本</span><br><span class=\"line\">git submodule update --recursive</span><br><span class=\"line\">//或者</span><br><span class=\"line\">git pull --recurse-submodules</span><br></pre></td></tr></table></figure>\n\n<p>注意：pull是拉取远端仓库代码到本地，如果远程代码和本地库代码不一致，会自动合并，如果自动合并失败，还会涉及到手都冻解决冲突的问题。</p>\n","categories":[{"name":"工具使用","path":"api/categories/工具使用.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"}]}