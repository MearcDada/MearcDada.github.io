{"title":"抽象工厂模式","slug":"DesignPatterns-abstract_factory","date":"2022-12-20T16:00:00.000Z","updated":"2024-12-03T07:22:26.000Z","comments":true,"path":"api/articles/DesignPatterns-abstract_factory.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/AbatractFactory.jpg"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>抽象工厂模式(Abstract Factory Pattern)：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。抽象工厂模式又称为Kit模式，属于对象创建型模式。</p>\n<h3 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h3><ul>\n<li>抽象工厂模式包含如下角色：<ul>\n<li>AbstractFactory：抽象工厂</li>\n<li>ConcreteFactory：具体工厂</li>\n<li>AbstractProduct：抽象产品</li>\n<li>Product：具体产品</li>\n</ul>\n   <img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/AbatractFactory.jpg\" alt=\"AbatractFactory\"></li>\n</ul>\n<p>代码示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 抽象产品A</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AbstractFactoryA</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">AbstractFactoryA</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品A1</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ProductA1</span> : <span class=\"keyword\">public</span> AbstractFactoryA</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">ProductA1</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品A2</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ProductA2</span> : <span class=\"keyword\">public</span> AbstractFactoryA</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">ProductA2</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抽象产品B</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AbstractFactoryB</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">AbstractFactoryA</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品B1</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ProductB1</span> : <span class=\"keyword\">public</span> AbstractFactoryB</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">ProductB1</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品B2</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ProductB2</span> : <span class=\"keyword\">public</span> AbstractFactoryB</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">ProductB2</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抽象工厂</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AbstractFactory</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">Factory</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 工厂1</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ConcreteFactory1</span> : <span class=\"keyword\">public</span> AbstractFactory</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">ConcreteFactory1</span>()&#123;&#125;;</span><br><span class=\"line\">    <span class=\"function\">AbstractFactoryA* <span class=\"title\">createProductA</span><span class=\"params\">()</span></span>&#123; <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> <span class=\"built_in\">ProductA1</span>();</span><br><span class=\"line\">    <span class=\"function\">AbstractFactoryB* <span class=\"title\">createProductB</span><span class=\"params\">()</span></span>&#123; <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> <span class=\"built_in\">ProductB1</span>();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">                                       </span><br><span class=\"line\"><span class=\"comment\">// 工厂2</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ConcreteFactory2</span> : <span class=\"keyword\">public</span> AbstractFactory</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">ConcreteFactory2</span>()&#123;&#125;;</span><br><span class=\"line\">    <span class=\"function\">AbstractFactoryA* <span class=\"title\">createProductA</span><span class=\"params\">()</span></span>&#123; <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> <span class=\"built_in\">ProductA1</span>();</span><br><span class=\"line\">    <span class=\"function\">AbstractFactoryB* <span class=\"title\">createProductB</span><span class=\"params\">()</span></span>&#123; <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> <span class=\"built_in\">ProductB1</span>();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 主函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    AbstractFactory * fc = <span class=\"keyword\">new</span> <span class=\"built_in\">ConcreteFactory1</span>();</span><br><span class=\"line\">\tAbstractProductA * pa =  fc-&gt;<span class=\"built_in\">createProductA</span>();</span><br><span class=\"line\">\tAbstractProductB * pb = fc-&gt;<span class=\"built_in\">createProductB</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tAbstractFactory * fc2 = <span class=\"keyword\">new</span> <span class=\"built_in\">ConcreteFactory2</span>();</span><br><span class=\"line\">\tAbstractProductA * pa2 =  fc2-&gt;<span class=\"built_in\">createProductA</span>();</span><br><span class=\"line\">\tAbstractProductB * pb2 = fc2-&gt;<span class=\"built_in\">createProductB</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">delete</span> fc;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> pa;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> pb;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">delete</span> fc2;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> pa2;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> pb2;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>抽象工厂模式提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。抽象工厂模式又称为Kit模式，属于对象创建型模式。</li>\n<li>抽象工厂模式包含四个角色：抽象工厂用于声明生成抽象产品的方法；具体工厂实现了抽象工厂声明的生成抽象产品的方法，生成一组具体产品，这些产品构成了一个产品族，每一个产品都位于某个产品等级结构中；抽象产品为每种产品声明接口，在抽象产品中定义了产品的抽象业务方法；具体产品定义具体工厂生产的具体产品对象，实现抽象产品接口中定义的业务方法。</li>\n<li>抽象工厂模式是所有形式的工厂模式中最为抽象和最具一般性的一种形态。抽象工厂模式与工厂方法模式最大的区别在于，工厂方法模式针对的是一个产品等级结构，而抽象工厂模式则需要面对多个产品等级结构。</li>\n<li>抽象工厂模式的主要优点是隔离了具体类的生成，使得客户并不需要知道什么被创建，而且每次可以通过具体工厂类创建一个产品族中的多个对象，增加或者替换产品族比较方便，增加新的具体工厂和产品族很方便；主要缺点在于增加新的产品等级结构很复杂，需要修改抽象工厂和所有的具体工厂类，对“开闭原则”的支持呈现倾斜性。</li>\n<li>抽象工厂模式适用情况包括：一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节；系统中有多于一个的产品族，而每次只使用其中某一产品族；属于同一个产品族的产品将在一起使用；系统提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体实现。</li>\n</ul>\n<p>参考资料：<a href=\"https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/abstract_factory.html\">https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/abstract_factory.html</a></p>\n","more":"<h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>抽象工厂模式(Abstract Factory Pattern)：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。抽象工厂模式又称为Kit模式，属于对象创建型模式。</p>\n<h3 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h3><ul>\n<li>抽象工厂模式包含如下角色：<ul>\n<li>AbstractFactory：抽象工厂</li>\n<li>ConcreteFactory：具体工厂</li>\n<li>AbstractProduct：抽象产品</li>\n<li>Product：具体产品</li>\n</ul>\n   <img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/AbatractFactory.jpg\" alt=\"AbatractFactory\"></li>\n</ul>\n<p>代码示例：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 抽象产品A</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AbstractFactoryA</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">AbstractFactoryA</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品A1</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ProductA1</span> : <span class=\"keyword\">public</span> AbstractFactoryA</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">ProductA1</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品A2</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ProductA2</span> : <span class=\"keyword\">public</span> AbstractFactoryA</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">ProductA2</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抽象产品B</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AbstractFactoryB</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">AbstractFactoryA</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品B1</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ProductB1</span> : <span class=\"keyword\">public</span> AbstractFactoryB</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">ProductB1</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品B2</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ProductB2</span> : <span class=\"keyword\">public</span> AbstractFactoryB</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">ProductB2</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 抽象工厂</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AbstractFactory</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">Factory</span>()&#123;&#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 工厂1</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ConcreteFactory1</span> : <span class=\"keyword\">public</span> AbstractFactory</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">ConcreteFactory1</span>()&#123;&#125;;</span><br><span class=\"line\">    <span class=\"function\">AbstractFactoryA* <span class=\"title\">createProductA</span><span class=\"params\">()</span></span>&#123; <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> <span class=\"built_in\">ProductA1</span>();</span><br><span class=\"line\">    <span class=\"function\">AbstractFactoryB* <span class=\"title\">createProductB</span><span class=\"params\">()</span></span>&#123; <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> <span class=\"built_in\">ProductB1</span>();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">                                       </span><br><span class=\"line\"><span class=\"comment\">// 工厂2</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ConcreteFactory2</span> : <span class=\"keyword\">public</span> AbstractFactory</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"built_in\">ConcreteFactory2</span>()&#123;&#125;;</span><br><span class=\"line\">    <span class=\"function\">AbstractFactoryA* <span class=\"title\">createProductA</span><span class=\"params\">()</span></span>&#123; <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> <span class=\"built_in\">ProductA1</span>();</span><br><span class=\"line\">    <span class=\"function\">AbstractFactoryB* <span class=\"title\">createProductB</span><span class=\"params\">()</span></span>&#123; <span class=\"keyword\">return</span>  <span class=\"keyword\">new</span> <span class=\"built_in\">ProductB1</span>();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 主函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    AbstractFactory * fc = <span class=\"keyword\">new</span> <span class=\"built_in\">ConcreteFactory1</span>();</span><br><span class=\"line\">\tAbstractProductA * pa =  fc-&gt;<span class=\"built_in\">createProductA</span>();</span><br><span class=\"line\">\tAbstractProductB * pb = fc-&gt;<span class=\"built_in\">createProductB</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tAbstractFactory * fc2 = <span class=\"keyword\">new</span> <span class=\"built_in\">ConcreteFactory2</span>();</span><br><span class=\"line\">\tAbstractProductA * pa2 =  fc2-&gt;<span class=\"built_in\">createProductA</span>();</span><br><span class=\"line\">\tAbstractProductB * pb2 = fc2-&gt;<span class=\"built_in\">createProductB</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">delete</span> fc;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> pa;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> pb;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">delete</span> fc2;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> pa2;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> pb2;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>抽象工厂模式提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。抽象工厂模式又称为Kit模式，属于对象创建型模式。</li>\n<li>抽象工厂模式包含四个角色：抽象工厂用于声明生成抽象产品的方法；具体工厂实现了抽象工厂声明的生成抽象产品的方法，生成一组具体产品，这些产品构成了一个产品族，每一个产品都位于某个产品等级结构中；抽象产品为每种产品声明接口，在抽象产品中定义了产品的抽象业务方法；具体产品定义具体工厂生产的具体产品对象，实现抽象产品接口中定义的业务方法。</li>\n<li>抽象工厂模式是所有形式的工厂模式中最为抽象和最具一般性的一种形态。抽象工厂模式与工厂方法模式最大的区别在于，工厂方法模式针对的是一个产品等级结构，而抽象工厂模式则需要面对多个产品等级结构。</li>\n<li>抽象工厂模式的主要优点是隔离了具体类的生成，使得客户并不需要知道什么被创建，而且每次可以通过具体工厂类创建一个产品族中的多个对象，增加或者替换产品族比较方便，增加新的具体工厂和产品族很方便；主要缺点在于增加新的产品等级结构很复杂，需要修改抽象工厂和所有的具体工厂类，对“开闭原则”的支持呈现倾斜性。</li>\n<li>抽象工厂模式适用情况包括：一个系统不应当依赖于产品类实例如何被创建、组合和表达的细节；系统中有多于一个的产品族，而每次只使用其中某一产品族；属于同一个产品族的产品将在一起使用；系统提供一个产品类的库，所有的产品以同样的接口出现，从而使客户端不依赖于具体实现。</li>\n</ul>\n<p>参考资料：<a href=\"https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/abstract_factory.html\">https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/abstract_factory.html</a></p>\n","categories":[{"name":"设计模式","path":"api/categories/设计模式.json"}],"tags":[{"name":"C++","path":"api/tags/C++.json"},{"name":"设计模式","path":"api/tags/设计模式.json"}]}