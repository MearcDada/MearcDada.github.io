{"title":"Qt常见宏定义","slug":"Qt-MacroDefinition","date":"2023-01-01T16:00:00.000Z","updated":"2024-12-03T07:22:26.000Z","comments":true,"path":"api/articles/Qt-MacroDefinition.json","excerpt":null,"covers":null,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h4 id=\"Qt常见宏定义\"><a href=\"#Qt常见宏定义\" class=\"headerlink\" title=\"Qt常见宏定义\"></a>Qt常见宏定义</h4><h4 id=\"Q-OBJECT：继承了QObject类的类，使其具有信号槽的能力。\"><a href=\"#Q-OBJECT：继承了QObject类的类，使其具有信号槽的能力。\" class=\"headerlink\" title=\"Q_OBJECT：继承了QObject类的类，使其具有信号槽的能力。\"></a>Q_OBJECT：继承了QObject类的类，使其具有信号槽的能力。</h4><p>&emsp;&emsp;QObject 是Qt模块的核心。它的最主要特征是关于对象间无缝通信的机制：信号与槽。使用connect()建立信号到槽的连接，使用disconnect()销毁连接，使用blockSignals()暂时阻塞信号以避免无限通知循环，使用connectNotify()和disconnectNotify()追踪连接。<br>&emsp;&emsp;使用信号槽，必须直接或间接继承QObject，都应该在第一行代码写上Q_OBJECT。不管是不是使用信号槽，都应该添加这个宏。这个宏的展开将为我们的类提供信号槽机制、国际化机制以及 Qt 提供的不基于 C++ RTTI 的反射能力。因此，如果你觉得你的类不需要使用信号槽，就不添加这个宏，就是错误的。其它很多操作都会依赖于这个宏。<br>示例：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QObject&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">xx</span> ：<span class=\"keyword\">public</span> QObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tQ_OBJECT</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">xx</span>(QObject* parent );</span><br><span class=\"line\">\t~<span class=\"built_in\">xx</span>()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"常见系统宏定义\"><a href=\"#常见系统宏定义\" class=\"headerlink\" title=\"常见系统宏定义\"></a>常见系统宏定义</h4><p>Q_OS_MAC：Mac系统宏定义<br>Q_OS_WIN：Windoows(x86/x64)系统宏定义<br>Q_OS_WIN32：Windoows(x86/x64)系统宏定义<br>Q_OS_WIN64：Windoows(x64)系统宏定义<br>Q_OS_ANDROID：Android系统宏定义<br>Q_OS_LINUX：liunx系统宏定义</p>\n<p>示例：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(Q_OS_WIN32)</span></span><br><span class=\"line\">    <span class=\"built_in\">qDebug</span>()&lt;&lt;<span class=\"string\">&quot;Q_OS_WIN32&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">elif</span> defined(Q_OS_LINUX)</span></span><br><span class=\"line\">    <span class=\"built_in\">qDebug</span>()&lt;&lt;<span class=\"string\">&quot;Q_OS_LINUX&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">    <span class=\"built_in\">qDebug</span>()&lt;&lt;<span class=\"string\">&quot;Q_OS_other&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"虚函数宏定义\"><a href=\"#虚函数宏定义\" class=\"headerlink\" title=\"虚函数宏定义\"></a>虚函数宏定义</h4><p>Q_DECL_OVERRIDE：防止虚函数重写不正确</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">paint</span><span class=\"params\">(QPainter *painter,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">           <span class=\"type\">const</span> QStyleOptionViewItem &amp;option, <span class=\"type\">const</span> QModelIndex &amp;index)</span> <span class=\"type\">const</span> Q_DECL_OVERRIDE</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"取消警告\"><a href=\"#取消警告\" class=\"headerlink\" title=\"取消警告\"></a>取消警告</h4><p>Q_UNUSED（index）: 取消没有使用的变量警告</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">paint</span><span class=\"params\">(<span class=\"type\">int</span> index ,<span class=\"type\">int</span> abc)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   Q_UNUSED（index）</span><br><span class=\"line\">   <span class=\"type\">int</span> c = abc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"国际化\"><a href=\"#国际化\" class=\"headerlink\" title=\"国际化\"></a>国际化</h4><p> Q_DECLARE_TR_FUNCTIONS(what) : 给非Qt类添加翻译支持</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Tr</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">Q_DECLARE_TR_FUNCTIONS</span>(Welcome)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>QT_TR_NOOP() 和QT_TRANSLATE_NOOP()  :翻译的文本在函数的外部</p>\n<p>QT_TR_NOOP()  示例</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">QString <span class=\"title\">FriendlyConversation::greeting</span><span class=\"params\">(<span class=\"type\">int</span> type)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    staticconst <span class=\"type\">char</span> *greeting_strings[]= &#123;</span><br><span class=\"line\">        <span class=\"built_in\">QT_TR_NOOP</span>(<span class=\"string\">&quot;Hello&quot;</span>),</span><br><span class=\"line\">        <span class=\"built_in\">QT_TR_NOOP</span>(<span class=\"string\">&quot;Goodbye&quot;</span>)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">tr</span>(greeting_strings[type]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>QT_TRANSLATE_NOOP() 示例</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">staticconst <span class=\"type\">char</span> *greeting_strings[]= &#123;</span><br><span class=\"line\">    <span class=\"built_in\">QT_TRANSLATE_NOOP</span>(<span class=\"string\">&quot;FriendlyConversation&quot;</span>,<span class=\"string\">&quot;Hello&quot;</span>),</span><br><span class=\"line\">    <span class=\"built_in\">QT_TRANSLATE_NOOP</span>(<span class=\"string\">&quot;FriendlyConversation&quot;</span>,<span class=\"string\">&quot;Goodbye&quot;</span>)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\">QString <span class=\"title\">FriendlyConversation::greeting</span><span class=\"params\">(<span class=\"type\">int</span> type)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">tr</span>(greeting_strings[type]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\">QString <span class=\"title\">global_greeting</span><span class=\"params\">(<span class=\"type\">int</span> type)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> qApp-&gt;<span class=\"built_in\">translate</span>(<span class=\"string\">&quot;FriendlyConversation&quot;</span>,</span><br><span class=\"line\">                           greeting_strings[type]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>PS：如果你用宏QT_NO_CAST_FROM_ASCII定义来编译软件禁止从const char * 到Qstring 的转换，你就可能捕获任何漏掉的字符串。</p>\n","more":"<h4 id=\"Qt常见宏定义\"><a href=\"#Qt常见宏定义\" class=\"headerlink\" title=\"Qt常见宏定义\"></a>Qt常见宏定义</h4><h4 id=\"Q-OBJECT：继承了QObject类的类，使其具有信号槽的能力。\"><a href=\"#Q-OBJECT：继承了QObject类的类，使其具有信号槽的能力。\" class=\"headerlink\" title=\"Q_OBJECT：继承了QObject类的类，使其具有信号槽的能力。\"></a>Q_OBJECT：继承了QObject类的类，使其具有信号槽的能力。</h4><p>&emsp;&emsp;QObject 是Qt模块的核心。它的最主要特征是关于对象间无缝通信的机制：信号与槽。使用connect()建立信号到槽的连接，使用disconnect()销毁连接，使用blockSignals()暂时阻塞信号以避免无限通知循环，使用connectNotify()和disconnectNotify()追踪连接。<br>&emsp;&emsp;使用信号槽，必须直接或间接继承QObject，都应该在第一行代码写上Q_OBJECT。不管是不是使用信号槽，都应该添加这个宏。这个宏的展开将为我们的类提供信号槽机制、国际化机制以及 Qt 提供的不基于 C++ RTTI 的反射能力。因此，如果你觉得你的类不需要使用信号槽，就不添加这个宏，就是错误的。其它很多操作都会依赖于这个宏。<br>示例：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;QObject&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">xx</span> ：<span class=\"keyword\">public</span> QObject</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tQ_OBJECT</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">xx</span>(QObject* parent );</span><br><span class=\"line\">\t~<span class=\"built_in\">xx</span>()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"常见系统宏定义\"><a href=\"#常见系统宏定义\" class=\"headerlink\" title=\"常见系统宏定义\"></a>常见系统宏定义</h4><p>Q_OS_MAC：Mac系统宏定义<br>Q_OS_WIN：Windoows(x86/x64)系统宏定义<br>Q_OS_WIN32：Windoows(x86/x64)系统宏定义<br>Q_OS_WIN64：Windoows(x64)系统宏定义<br>Q_OS_ANDROID：Android系统宏定义<br>Q_OS_LINUX：liunx系统宏定义</p>\n<p>示例：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">if</span> defined(Q_OS_WIN32)</span></span><br><span class=\"line\">    <span class=\"built_in\">qDebug</span>()&lt;&lt;<span class=\"string\">&quot;Q_OS_WIN32&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">elif</span> defined(Q_OS_LINUX)</span></span><br><span class=\"line\">    <span class=\"built_in\">qDebug</span>()&lt;&lt;<span class=\"string\">&quot;Q_OS_LINUX&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">else</span></span></span><br><span class=\"line\">    <span class=\"built_in\">qDebug</span>()&lt;&lt;<span class=\"string\">&quot;Q_OS_other&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"虚函数宏定义\"><a href=\"#虚函数宏定义\" class=\"headerlink\" title=\"虚函数宏定义\"></a>虚函数宏定义</h4><p>Q_DECL_OVERRIDE：防止虚函数重写不正确</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">paint</span><span class=\"params\">(QPainter *painter,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">           <span class=\"type\">const</span> QStyleOptionViewItem &amp;option, <span class=\"type\">const</span> QModelIndex &amp;index)</span> <span class=\"type\">const</span> Q_DECL_OVERRIDE</span>;</span><br></pre></td></tr></table></figure>\n<h4 id=\"取消警告\"><a href=\"#取消警告\" class=\"headerlink\" title=\"取消警告\"></a>取消警告</h4><p>Q_UNUSED（index）: 取消没有使用的变量警告</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">paint</span><span class=\"params\">(<span class=\"type\">int</span> index ,<span class=\"type\">int</span> abc)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   Q_UNUSED（index）</span><br><span class=\"line\">   <span class=\"type\">int</span> c = abc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"国际化\"><a href=\"#国际化\" class=\"headerlink\" title=\"国际化\"></a>国际化</h4><p> Q_DECLARE_TR_FUNCTIONS(what) : 给非Qt类添加翻译支持</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Tr</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">Q_DECLARE_TR_FUNCTIONS</span>(Welcome)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>QT_TR_NOOP() 和QT_TRANSLATE_NOOP()  :翻译的文本在函数的外部</p>\n<p>QT_TR_NOOP()  示例</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">QString <span class=\"title\">FriendlyConversation::greeting</span><span class=\"params\">(<span class=\"type\">int</span> type)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    staticconst <span class=\"type\">char</span> *greeting_strings[]= &#123;</span><br><span class=\"line\">        <span class=\"built_in\">QT_TR_NOOP</span>(<span class=\"string\">&quot;Hello&quot;</span>),</span><br><span class=\"line\">        <span class=\"built_in\">QT_TR_NOOP</span>(<span class=\"string\">&quot;Goodbye&quot;</span>)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">tr</span>(greeting_strings[type]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>QT_TRANSLATE_NOOP() 示例</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">staticconst <span class=\"type\">char</span> *greeting_strings[]= &#123;</span><br><span class=\"line\">    <span class=\"built_in\">QT_TRANSLATE_NOOP</span>(<span class=\"string\">&quot;FriendlyConversation&quot;</span>,<span class=\"string\">&quot;Hello&quot;</span>),</span><br><span class=\"line\">    <span class=\"built_in\">QT_TRANSLATE_NOOP</span>(<span class=\"string\">&quot;FriendlyConversation&quot;</span>,<span class=\"string\">&quot;Goodbye&quot;</span>)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\">QString <span class=\"title\">FriendlyConversation::greeting</span><span class=\"params\">(<span class=\"type\">int</span> type)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">tr</span>(greeting_strings[type]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\">QString <span class=\"title\">global_greeting</span><span class=\"params\">(<span class=\"type\">int</span> type)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> qApp-&gt;<span class=\"built_in\">translate</span>(<span class=\"string\">&quot;FriendlyConversation&quot;</span>,</span><br><span class=\"line\">                           greeting_strings[type]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>PS：如果你用宏QT_NO_CAST_FROM_ASCII定义来编译软件禁止从const char * 到Qstring 的转换，你就可能捕获任何漏掉的字符串。</p>\n","categories":[{"name":"编程语言","path":"api/categories/编程语言.json"}],"tags":[{"name":"C++","path":"api/tags/C++.json"},{"name":"Qt","path":"api/tags/Qt.json"}]}