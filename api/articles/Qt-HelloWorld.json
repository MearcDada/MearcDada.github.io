{"title":"你好，Qt!","slug":"Qt-HelloWorld","date":"2022-12-10T16:00:00.000Z","updated":"2024-12-03T07:22:26.000Z","comments":true,"path":"api/articles/Qt-HelloWorld.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204185044836.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204190923568.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204185718719.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204191045988.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204190121837.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204190610498.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204191908114.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204192119354.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204192305613.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204194028602.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204195144628.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204195348540.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204200959967.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204203913408.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204202814206.png"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"你好-Qt\"><a href=\"#你好-Qt\" class=\"headerlink\" title=\"你好 Qt\"></a>你好 Qt</h3><p>在Qt Creator中创建一个图形用户界面的项目，从而生成一个可以显示Hello World字符串的程序。</p>\n<h4 id=\"1-创建程序\"><a href=\"#1-创建程序\" class=\"headerlink\" title=\"1.创建程序\"></a>1.创建程序</h4><p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204185044836.png\" alt=\"image-20221204185044836\"></p>\n<h4 id=\"2-输入项目名称和创建路径\"><a href=\"#2-输入项目名称和创建路径\" class=\"headerlink\" title=\"2.输入项目名称和创建路径\"></a>2.输入项目名称和创建路径</h4><p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204190923568.png\" alt=\"image-20221204190923568\"></p>\n<h4 id=\"3-选择构建方式\"><a href=\"#3-选择构建方式\" class=\"headerlink\" title=\"3.选择构建方式\"></a>3.选择构建方式</h4><p>有QMake、CMake等构建方式，本次采用QMake的构建模式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204185718719.png\" alt=\"image-20221204185718719\"></p>\n<h4 id=\"4-设置类信息\"><a href=\"#4-设置类信息\" class=\"headerlink\" title=\"4. 设置类信息\"></a>4. 设置类信息</h4><p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204191045988.png\" alt=\"image-20221204191045988\"></p>\n<h4 id=\"5-选择构建方式\"><a href=\"#5-选择构建方式\" class=\"headerlink\" title=\"5. 选择构建方式\"></a>5. 选择构建方式</h4><p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204190121837.png\" alt=\"image-20221204190121837\"></p>\n<h4 id=\"6-选择版本构建系统\"><a href=\"#6-选择版本构建系统\" class=\"headerlink\" title=\"6.选择版本构建系统\"></a>6.选择版本构建系统</h4><p>如有需求，需要安装Git等工具。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204190610498.png\" alt=\"image-20221204190610498\"></p>\n<p>最后点击完成。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204191908114.png\" alt=\"image-20221204191908114\"></p>\n<h3 id=\"文件说明\"><a href=\"#文件说明\" class=\"headerlink\" title=\"文件说明\"></a>文件说明</h3><p>项目建立完成后会直接进入编辑模式。界面的右边是编辑器，可以阅读和编辑代码。如果觉得字体太小，则可以使用快捷键Ctrl+“十”（即同时按下Ctrl键和十号键）来放大字体，使用Ctrl十“一”（减号）来缩小字体，或者使用Ctrl键十鼠标滚轮，使用Ctl十0（数字）可以使字体还原到默认大小。再来看左边侧边栏，其中罗列了项目中的所有文件。</p>\n<table>\n<thead>\n<tr>\n<th>文件</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>helloworld.pro</td>\n<td>该文件是项目文件，其中包含了项目相关信息 <a href=\"https://space.mearc.top/2022/12/05/Qt-pro/\">更详细的说明</a></td>\n</tr>\n<tr>\n<td>helloworld.pro.user</td>\n<td>该文件中包含了与用户有关的项目信息</td>\n</tr>\n<tr>\n<td>helloworld.h</td>\n<td>该文件是新建的helloworld类的头文件</td>\n</tr>\n<tr>\n<td>helloworld.cpp</td>\n<td>该文件是新建的helloworld类的源文件</td>\n</tr>\n<tr>\n<td>main.cpp</td>\n<td>该文件中包含了main()主函数</td>\n</tr>\n<tr>\n<td>helloworld.ui</td>\n<td>该文件是设计师设计的界面对应的界面文件</td>\n</tr>\n</tbody></table>\n<h3 id=\"界面设计\"><a href=\"#界面设计\" class=\"headerlink\" title=\"界面设计\"></a>界面设计</h3><p>双击Ui文件，进入设计模式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204192119354.png\" alt=\"image-20221204192119354\"></p>\n<p>添加控件，拖动Label控件到主设计界面，双击主界面的Lable控件，修改显示文本或在属性框中修改text属性。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204192305613.png\" alt=\"image-20221204192305613\"></p>\n<h3 id=\"运行与发布\"><a href=\"#运行与发布\" class=\"headerlink\" title=\"运行与发布\"></a>运行与发布</h3><h4 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h4><p>可以使用快捷键Ctrl+R或者通过按左下角的运行按钮来运行程序。如果是第次使用，则会弹出“保存修改”对话框，这是因为刚才在设计模式更改了界面，而helloWorld.ui文件被修改了但是还没有保存。现在要编译运行该程序，就要先保存所有文件。可以选中“构建之前总是先保存文件”选项，则以后再运行程序时就可以自动保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204194028602.png\" alt=\"image-20221204194028602\"></p>\n<p>再看一下项目目录中的文件可以发现，E:\\Code\\build-HelloWorld-Desktop_Qt_5_15_2_MinGW_32_bit-Debug\\debug目录下又多了一个build-HelloWorld-Desktop_Qt_5_15_2_MinGW_32_bit-Debug文件夹，这是默认的构建目录。也就是说，Qt Creator将项目源文件和编译生成的文件进行了分类存放，helloworld文件夹中是项目源文件，这个文件夹存放的是编译后生成的文件。进人该文件夹可以看到，这里有3个Makefile文件和一个ui_helloworld.h文件，还有两个目录debug和release,如图2-8所示。release文件夹是空的，进入debug文件夹，有3个.o文件和一个.cpp文件，它们是编译时生成的中间文件，可以不必管它，而剩下的一个helloworld.exe文件便是生成的可执行文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204195144628.png\" alt=\"image-20221204195144628\"></p>\n<p>双击直接运行HelloWorld.exe程序会报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204195348540.png\" alt=\"image-20221204195348540\"></p>\n<p>警告对话框，提示缺少Qt5 Cored.dl等文件，可以想到应用程序运行是需要dl动态链接库的，可以去Qt的安装目录下寻找该文件。</p>\n<p>方法一：在Qt安装的bin目录下复制到与exe程序同一目录下。</p>\n<p>方法二：设置把Qt的bin路径添加到环境变量中。</p>\n<h4 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h4><p>1.生成Release程序</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204200959967.png\" alt=\"image-20221204200959967\"></p>\n<p>切换后，构建一个新目录 E:\\Code\\build-HelloWorld-Desktop_Qt_5_15_2_MinGW_32_bit-Release 打开release文件夹。如何在其他电脑运行程序呢？</p>\n<p>如果要使Release版本的程序可以在别人的计算机上运行（当然，对方计算机也要是Windows平台)，还需要将几个dll文件与其一起发布。可以在桌面上新建一个文件夹，重命名为“我的第一个Qt程序”，然后将release文件夹中的helloworld,exe复制过来，再去Qt安装目录的bin目录中将libgcc_sdw2-l.dll、libstdc++一6.dll、libwinpthread-1.dl、Qt5Core.dll、Qt5Gui.dll和Qt5 Widgets.dll这6个文件复制过来。另外，还需要将plugins目录中的platforms文件夹<br>复制过来（不要修改该文件夹名称），里面只需要保留qwindows.dl文件即可。现在整个文件夹一共有19.3MB,如果使用WinRAR等打包压缩软件对它进行压缩，就只有6MB了，已经到达了可以接受的程度，这时就可以将压缩包发布出去了。Liunx平台也是将.so等文件复制到同一目录，打包成zip文件发布即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204203913408.png\" alt=\"image-20221204203913408\"></p>\n<p>另外，Qt提供了一个windeployqt(仅Windows平台)工具来自动创建可部署的文件夹。例如，生成的release版本可执行文件在E:\\Code\\exe文件夹中，则只需要在开始菜单的Qt5.15.2菜单中启动Qt的CMD命令行工具，然后输入下面命令即可：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">windeployqt.exe  E:\\Code\\exe\\HelloWorld.exe  </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204202814206.png\" alt=\"image-20221204202814206\"></p>\n<p>此方法会拉取很多不需要的dll,如果存在多个版本的Qt还会存在windeployqt可能会拉取错误的path路径下的dll，保留一个路径即可。</p>\n","more":"<h3 id=\"你好-Qt\"><a href=\"#你好-Qt\" class=\"headerlink\" title=\"你好 Qt\"></a>你好 Qt</h3><p>在Qt Creator中创建一个图形用户界面的项目，从而生成一个可以显示Hello World字符串的程序。</p>\n<h4 id=\"1-创建程序\"><a href=\"#1-创建程序\" class=\"headerlink\" title=\"1.创建程序\"></a>1.创建程序</h4><p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204185044836.png\" alt=\"image-20221204185044836\"></p>\n<h4 id=\"2-输入项目名称和创建路径\"><a href=\"#2-输入项目名称和创建路径\" class=\"headerlink\" title=\"2.输入项目名称和创建路径\"></a>2.输入项目名称和创建路径</h4><p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204190923568.png\" alt=\"image-20221204190923568\"></p>\n<h4 id=\"3-选择构建方式\"><a href=\"#3-选择构建方式\" class=\"headerlink\" title=\"3.选择构建方式\"></a>3.选择构建方式</h4><p>有QMake、CMake等构建方式，本次采用QMake的构建模式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204185718719.png\" alt=\"image-20221204185718719\"></p>\n<h4 id=\"4-设置类信息\"><a href=\"#4-设置类信息\" class=\"headerlink\" title=\"4. 设置类信息\"></a>4. 设置类信息</h4><p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204191045988.png\" alt=\"image-20221204191045988\"></p>\n<h4 id=\"5-选择构建方式\"><a href=\"#5-选择构建方式\" class=\"headerlink\" title=\"5. 选择构建方式\"></a>5. 选择构建方式</h4><p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204190121837.png\" alt=\"image-20221204190121837\"></p>\n<h4 id=\"6-选择版本构建系统\"><a href=\"#6-选择版本构建系统\" class=\"headerlink\" title=\"6.选择版本构建系统\"></a>6.选择版本构建系统</h4><p>如有需求，需要安装Git等工具。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204190610498.png\" alt=\"image-20221204190610498\"></p>\n<p>最后点击完成。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204191908114.png\" alt=\"image-20221204191908114\"></p>\n<h3 id=\"文件说明\"><a href=\"#文件说明\" class=\"headerlink\" title=\"文件说明\"></a>文件说明</h3><p>项目建立完成后会直接进入编辑模式。界面的右边是编辑器，可以阅读和编辑代码。如果觉得字体太小，则可以使用快捷键Ctrl+“十”（即同时按下Ctrl键和十号键）来放大字体，使用Ctrl十“一”（减号）来缩小字体，或者使用Ctrl键十鼠标滚轮，使用Ctl十0（数字）可以使字体还原到默认大小。再来看左边侧边栏，其中罗列了项目中的所有文件。</p>\n<table>\n<thead>\n<tr>\n<th>文件</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>helloworld.pro</td>\n<td>该文件是项目文件，其中包含了项目相关信息 <a href=\"https://space.mearc.top/2022/12/05/Qt-pro/\">更详细的说明</a></td>\n</tr>\n<tr>\n<td>helloworld.pro.user</td>\n<td>该文件中包含了与用户有关的项目信息</td>\n</tr>\n<tr>\n<td>helloworld.h</td>\n<td>该文件是新建的helloworld类的头文件</td>\n</tr>\n<tr>\n<td>helloworld.cpp</td>\n<td>该文件是新建的helloworld类的源文件</td>\n</tr>\n<tr>\n<td>main.cpp</td>\n<td>该文件中包含了main()主函数</td>\n</tr>\n<tr>\n<td>helloworld.ui</td>\n<td>该文件是设计师设计的界面对应的界面文件</td>\n</tr>\n</tbody></table>\n<h3 id=\"界面设计\"><a href=\"#界面设计\" class=\"headerlink\" title=\"界面设计\"></a>界面设计</h3><p>双击Ui文件，进入设计模式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204192119354.png\" alt=\"image-20221204192119354\"></p>\n<p>添加控件，拖动Label控件到主设计界面，双击主界面的Lable控件，修改显示文本或在属性框中修改text属性。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204192305613.png\" alt=\"image-20221204192305613\"></p>\n<h3 id=\"运行与发布\"><a href=\"#运行与发布\" class=\"headerlink\" title=\"运行与发布\"></a>运行与发布</h3><h4 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h4><p>可以使用快捷键Ctrl+R或者通过按左下角的运行按钮来运行程序。如果是第次使用，则会弹出“保存修改”对话框，这是因为刚才在设计模式更改了界面，而helloWorld.ui文件被修改了但是还没有保存。现在要编译运行该程序，就要先保存所有文件。可以选中“构建之前总是先保存文件”选项，则以后再运行程序时就可以自动保存</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204194028602.png\" alt=\"image-20221204194028602\"></p>\n<p>再看一下项目目录中的文件可以发现，E:\\Code\\build-HelloWorld-Desktop_Qt_5_15_2_MinGW_32_bit-Debug\\debug目录下又多了一个build-HelloWorld-Desktop_Qt_5_15_2_MinGW_32_bit-Debug文件夹，这是默认的构建目录。也就是说，Qt Creator将项目源文件和编译生成的文件进行了分类存放，helloworld文件夹中是项目源文件，这个文件夹存放的是编译后生成的文件。进人该文件夹可以看到，这里有3个Makefile文件和一个ui_helloworld.h文件，还有两个目录debug和release,如图2-8所示。release文件夹是空的，进入debug文件夹，有3个.o文件和一个.cpp文件，它们是编译时生成的中间文件，可以不必管它，而剩下的一个helloworld.exe文件便是生成的可执行文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204195144628.png\" alt=\"image-20221204195144628\"></p>\n<p>双击直接运行HelloWorld.exe程序会报错</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204195348540.png\" alt=\"image-20221204195348540\"></p>\n<p>警告对话框，提示缺少Qt5 Cored.dl等文件，可以想到应用程序运行是需要dl动态链接库的，可以去Qt的安装目录下寻找该文件。</p>\n<p>方法一：在Qt安装的bin目录下复制到与exe程序同一目录下。</p>\n<p>方法二：设置把Qt的bin路径添加到环境变量中。</p>\n<h4 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h4><p>1.生成Release程序</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204200959967.png\" alt=\"image-20221204200959967\"></p>\n<p>切换后，构建一个新目录 E:\\Code\\build-HelloWorld-Desktop_Qt_5_15_2_MinGW_32_bit-Release 打开release文件夹。如何在其他电脑运行程序呢？</p>\n<p>如果要使Release版本的程序可以在别人的计算机上运行（当然，对方计算机也要是Windows平台)，还需要将几个dll文件与其一起发布。可以在桌面上新建一个文件夹，重命名为“我的第一个Qt程序”，然后将release文件夹中的helloworld,exe复制过来，再去Qt安装目录的bin目录中将libgcc_sdw2-l.dll、libstdc++一6.dll、libwinpthread-1.dl、Qt5Core.dll、Qt5Gui.dll和Qt5 Widgets.dll这6个文件复制过来。另外，还需要将plugins目录中的platforms文件夹<br>复制过来（不要修改该文件夹名称），里面只需要保留qwindows.dl文件即可。现在整个文件夹一共有19.3MB,如果使用WinRAR等打包压缩软件对它进行压缩，就只有6MB了，已经到达了可以接受的程度，这时就可以将压缩包发布出去了。Liunx平台也是将.so等文件复制到同一目录，打包成zip文件发布即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204203913408.png\" alt=\"image-20221204203913408\"></p>\n<p>另外，Qt提供了一个windeployqt(仅Windows平台)工具来自动创建可部署的文件夹。例如，生成的release版本可执行文件在E:\\Code\\exe文件夹中，则只需要在开始菜单的Qt5.15.2菜单中启动Qt的CMD命令行工具，然后输入下面命令即可：</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">windeployqt.exe  E:\\Code\\exe\\HelloWorld.exe  </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog/image-20221204202814206.png\" alt=\"image-20221204202814206\"></p>\n<p>此方法会拉取很多不需要的dll,如果存在多个版本的Qt还会存在windeployqt可能会拉取错误的path路径下的dll，保留一个路径即可。</p>\n","categories":[{"name":"编程语言","path":"api/categories/编程语言.json"}],"tags":[{"name":"C++","path":"api/tags/C++.json"},{"name":"Qt","path":"api/tags/Qt.json"}]}