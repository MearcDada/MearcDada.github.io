{"title":"Qt 工具简单介绍","slug":"Qt-tool","date":"2022-12-10T16:00:00.000Z","updated":"2024-12-03T07:22:26.000Z","comments":true,"path":"api/articles/Qt-tool.json","excerpt":null,"covers":["https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204172741722.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204173513745.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204173849171.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204173912562.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204183250967.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204174016974.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204174811611.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204180158101.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204180410545.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204175055659.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204181021416.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204184311661.png","https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204182654423.png"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"Qt-Creator\"><a href=\"#Qt-Creator\" class=\"headerlink\" title=\"Qt  Creator\"></a>Qt  Creator</h3><h4 id=\"1-菜单\"><a href=\"#1-菜单\" class=\"headerlink\" title=\"1. 菜单\"></a>1. 菜单</h4><p>文件菜单。其中，包含了新建、打开和关闭项目和文件、打印文件和退出等基本功能菜单。<br>编辑菜单。这里有撤销、剪切、复制、查找和选择编码等常用功能菜单，高级菜单中还有标示空白符、折叠代码、改变字体大小和使用vim风格编辑等功能<br>菜单。<br>构建菜单。包含构建和运行项目等相关的菜单。<br>调试菜单。包含调试程序等相关的功能菜单。<br>Analyze菜单。包含QML分析器、Valgrind内存和功能分析器等相关菜单。<br>工具菜单。这里提供了快速定位菜单、外部工具菜单等。这里的选项菜单中包<br>含了Qt Creator各个方面的设置选项：环境设置、文本编辑器设置、帮助设置<br>构建和运行设置、调试器设置和版本控制设置等。在环境设置的Interface页面<br>可以将主题Theme设置为Classic,这样就可以使用以前的经典Qt Creator主<br>题了。<br>控件菜单。包含了设置窗口布局的一些菜单，如全屏显示和隐藏边栏等。<br>帮助菜单。包含Qt帮助、Qt Creator版本信息、报告bug和插件管理等菜单。</p>\n<h4 id=\"1-模式\"><a href=\"#1-模式\" class=\"headerlink\" title=\"1. 模式\"></a>1. 模式</h4><p>Qt Creator包含欢迎、编辑、设计、调试(Debug)、项目和帮助6个模式，各个模式<br>完成不同的功能，也可以使用快捷键来更换模式，各自对应的快捷键依次是Cr1十数<br>字1~6。</p>\n<h5 id=\"欢迎模式\"><a href=\"#欢迎模式\" class=\"headerlink\" title=\"欢迎模式\"></a>欢迎模式</h5><p>欢迎模式，主要提供了一些功能的快捷入口，如打开帮助教程、打开示例程序、打开项目、新建项目、快速打开以前的项目和会话、联网查看Qt官方论坛和博客等。Projects页面显示了最近打开的项目列表，在这里也可以创建一个新项目或者打开一个已有项目；示例页面显示了Qt自带的大量示例程序，并提供了搜索栏从而实现快速查找；教程页面提供了一些视频教程资源。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204172741722.png\" alt=\"image-20221204172741722\"></p>\n<h5 id=\"编辑模式\"><a href=\"#编辑模式\" class=\"headerlink\" title=\"编辑模式\"></a>编辑模式</h5><p>编辑模式，其主要用来查看和编辑程序代码，管理项目文件。Qt Creator中的编辑器具有关键字特殊颜色显示、代码自动补全、声明定义间快捷切换、函数原型提示、F1键快速打开相关帮助和全项目中进行查找等功能。也可以在“工具→选项”菜单项中对编辑器进行设置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204173513745.png\" alt=\"image-20221204173513745\"></p>\n<h5 id=\"设计模式\"><a href=\"#设计模式\" class=\"headerlink\" title=\"设计模式\"></a>设计模式</h5><p>设计模式，这里整合了Qt设计师的功能。可以设计图形界面，进行部件属性设置、信号和槽设置、布局设置等操作。如果是在Qt Quick项目中，还可以激活Quck设计器，那是全新的设计器界面。可以在“工具→选项”菜单项中对设计师进行设置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204173849171.png\" alt=\"image-20221204173849171\"></p>\n<h5 id=\"调试模式\"><a href=\"#调试模式\" class=\"headerlink\" title=\"调试模式\"></a>调试模式</h5><p>调试模式，支持设置断点、单步调试和远程调试等功能，包含局部变量和监视器、断点、线程以及快照等查看窗口。可以在“工具→选项”菜单项中设置调试器的相关选项。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204173912562.png\" alt=\"image-20221204173912562\"></p>\n<h5 id=\"项目模式\"><a href=\"#项目模式\" class=\"headerlink\" title=\"项目模式\"></a>项目模式</h5><p>项目模式，包含对特定项目的构建设置、运行设置、编辑器设置、代码风格设置和依赖关系等页面。构建设置中可以对项目的版本、使用的Qt版本和编译步骤进行设置：编辑器设置中可以设置文件的默认编码：在代码风格设置中可以设置自己的代码风格。也可以在“工具→选项”菜单项中对项目进行设置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204183250967.png\" alt=\"image-20221204183250967\"></p>\n<h5 id=\"帮助模式\"><a href=\"#帮助模式\" class=\"headerlink\" title=\"帮助模式\"></a>帮助模式</h5><p>帮助模式，在帮助模式中将Qt助手整合了进来，包含目录、索引、查找和书签等几个导航模式，可以在帮助中查看Qt和Qt Creator的各方面信息。可以在“工具→选项”菜单中对帮助进行相关设置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204174016974.png\" alt=\"image-20221204174016974\"></p>\n<h3 id=\"其他窗口\"><a href=\"#其他窗口\" class=\"headerlink\" title=\"其他窗口\"></a>其他窗口</h3><p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204174811611.png\" alt=\"image-20221204174811611\"></p>\n<p>按下F1 可以打开帮助模式，快速打开某个类的文档</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204180158101.png\" alt=\"image-20221204180158101\"></p>\n<p>定位器切换</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204180410545.png\" alt=\"image-20221204180410545\"></p>\n<h3 id=\"Qt-Creator配置\"><a href=\"#Qt-Creator配置\" class=\"headerlink\" title=\"Qt Creator配置\"></a>Qt Creator配置</h3><p>一般情况下无需修改Qt默认配置，安装Qt后会自动连接。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204175055659.png\" alt=\"image-20221204175055659\"></p>\n<h3 id=\"Qt-Assistant-Qt助手\"><a href=\"#Qt-Assistant-Qt助手\" class=\"headerlink\" title=\"Qt Assistant(Qt助手)\"></a>Qt Assistant(Qt助手)</h3><p>Qt Assistant是可配置且可重新发布的文档阅读器，可以方便地进行定制，并与Qt应用程序一起重新发布。<br>它的功能有：</p>\n<blockquote>\n<p>定制Qt Assistant并与应用程序一起重新发布。<br>快速查找关键词、全文本搜索、生成索引和书签。<br>同时为多个帮助文档集合建立索引并进行搜索。<br>在本地存放文档或在应用程序中提供在线帮助。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204181021416.png\" alt=\"image-20221204181021416\"></p>\n<h3 id=\"Qt-Designer-Qt设计师\"><a href=\"#Qt-Designer-Qt设计师\" class=\"headerlink\" title=\"Qt Designer(Qt设计师)\"></a>Qt Designer(Qt设计师)</h3><p>Qt Designer是强大的跨平台GUI布局和格式构建器。由于使用了与应用程序中将要使用的相同部件，可以使用屏幕上的格式快速设计、创建部件以及对话框。使用Qt Designer创建的界面样式功能齐全并可以进行预览，这样就可确保其外观完全符合要求。<br>功能和优势有：</p>\n<blockquote>\n<p>使用拖放功能快速设计用户界面。<br>定制部件或从标准部件库中选择部件。<br>以本地外观快速预览格式。<br>通过界面原型生成C十十、Java或Python代码。<br>将Qt Designer与Visual Studio或Eclipse IDE配合使用。<br>使用Qt信号与槽机制构建功能齐全的用户界面。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204184311661.png\" alt=\"image-20221204184311661\"></p>\n<h3 id=\"Qt-Linguist-Qt语言家\"><a href=\"#Qt-Linguist-Qt语言家\" class=\"headerlink\" title=\"Qt Linguist(Qt语言家)\"></a>Qt Linguist(Qt语言家)</h3><p>Qt Linguist提供了一套加速应用程序翻译和国际化的工具。Qt使用单一的源码树和单一的应用程序二进制包就可以同时支持多个语言和书写系统。<br>主要功能有：</p>\n<blockquote>\n<p>收集所有UI文本，并通过简单的应用程序提供给翻译人员。<br>语言和字体感知外观。<br>通过智能的合并工具快速为现有应用程序增加新的语言。<br>Unicode编码支持世界上大多数字母。<br>运行时可切换从左向右或从右向左的语言。<br>在一个文档中混合多种语言。<br>可以使用Qt Linguist来使应用程序支持多种语言。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204182654423.png\" alt=\"image-20221204182654423\"></p>\n","more":"<h3 id=\"Qt-Creator\"><a href=\"#Qt-Creator\" class=\"headerlink\" title=\"Qt  Creator\"></a>Qt  Creator</h3><h4 id=\"1-菜单\"><a href=\"#1-菜单\" class=\"headerlink\" title=\"1. 菜单\"></a>1. 菜单</h4><p>文件菜单。其中，包含了新建、打开和关闭项目和文件、打印文件和退出等基本功能菜单。<br>编辑菜单。这里有撤销、剪切、复制、查找和选择编码等常用功能菜单，高级菜单中还有标示空白符、折叠代码、改变字体大小和使用vim风格编辑等功能<br>菜单。<br>构建菜单。包含构建和运行项目等相关的菜单。<br>调试菜单。包含调试程序等相关的功能菜单。<br>Analyze菜单。包含QML分析器、Valgrind内存和功能分析器等相关菜单。<br>工具菜单。这里提供了快速定位菜单、外部工具菜单等。这里的选项菜单中包<br>含了Qt Creator各个方面的设置选项：环境设置、文本编辑器设置、帮助设置<br>构建和运行设置、调试器设置和版本控制设置等。在环境设置的Interface页面<br>可以将主题Theme设置为Classic,这样就可以使用以前的经典Qt Creator主<br>题了。<br>控件菜单。包含了设置窗口布局的一些菜单，如全屏显示和隐藏边栏等。<br>帮助菜单。包含Qt帮助、Qt Creator版本信息、报告bug和插件管理等菜单。</p>\n<h4 id=\"1-模式\"><a href=\"#1-模式\" class=\"headerlink\" title=\"1. 模式\"></a>1. 模式</h4><p>Qt Creator包含欢迎、编辑、设计、调试(Debug)、项目和帮助6个模式，各个模式<br>完成不同的功能，也可以使用快捷键来更换模式，各自对应的快捷键依次是Cr1十数<br>字1~6。</p>\n<h5 id=\"欢迎模式\"><a href=\"#欢迎模式\" class=\"headerlink\" title=\"欢迎模式\"></a>欢迎模式</h5><p>欢迎模式，主要提供了一些功能的快捷入口，如打开帮助教程、打开示例程序、打开项目、新建项目、快速打开以前的项目和会话、联网查看Qt官方论坛和博客等。Projects页面显示了最近打开的项目列表，在这里也可以创建一个新项目或者打开一个已有项目；示例页面显示了Qt自带的大量示例程序，并提供了搜索栏从而实现快速查找；教程页面提供了一些视频教程资源。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204172741722.png\" alt=\"image-20221204172741722\"></p>\n<h5 id=\"编辑模式\"><a href=\"#编辑模式\" class=\"headerlink\" title=\"编辑模式\"></a>编辑模式</h5><p>编辑模式，其主要用来查看和编辑程序代码，管理项目文件。Qt Creator中的编辑器具有关键字特殊颜色显示、代码自动补全、声明定义间快捷切换、函数原型提示、F1键快速打开相关帮助和全项目中进行查找等功能。也可以在“工具→选项”菜单项中对编辑器进行设置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204173513745.png\" alt=\"image-20221204173513745\"></p>\n<h5 id=\"设计模式\"><a href=\"#设计模式\" class=\"headerlink\" title=\"设计模式\"></a>设计模式</h5><p>设计模式，这里整合了Qt设计师的功能。可以设计图形界面，进行部件属性设置、信号和槽设置、布局设置等操作。如果是在Qt Quick项目中，还可以激活Quck设计器，那是全新的设计器界面。可以在“工具→选项”菜单项中对设计师进行设置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204173849171.png\" alt=\"image-20221204173849171\"></p>\n<h5 id=\"调试模式\"><a href=\"#调试模式\" class=\"headerlink\" title=\"调试模式\"></a>调试模式</h5><p>调试模式，支持设置断点、单步调试和远程调试等功能，包含局部变量和监视器、断点、线程以及快照等查看窗口。可以在“工具→选项”菜单项中设置调试器的相关选项。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204173912562.png\" alt=\"image-20221204173912562\"></p>\n<h5 id=\"项目模式\"><a href=\"#项目模式\" class=\"headerlink\" title=\"项目模式\"></a>项目模式</h5><p>项目模式，包含对特定项目的构建设置、运行设置、编辑器设置、代码风格设置和依赖关系等页面。构建设置中可以对项目的版本、使用的Qt版本和编译步骤进行设置：编辑器设置中可以设置文件的默认编码：在代码风格设置中可以设置自己的代码风格。也可以在“工具→选项”菜单项中对项目进行设置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204183250967.png\" alt=\"image-20221204183250967\"></p>\n<h5 id=\"帮助模式\"><a href=\"#帮助模式\" class=\"headerlink\" title=\"帮助模式\"></a>帮助模式</h5><p>帮助模式，在帮助模式中将Qt助手整合了进来，包含目录、索引、查找和书签等几个导航模式，可以在帮助中查看Qt和Qt Creator的各方面信息。可以在“工具→选项”菜单中对帮助进行相关设置。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204174016974.png\" alt=\"image-20221204174016974\"></p>\n<h3 id=\"其他窗口\"><a href=\"#其他窗口\" class=\"headerlink\" title=\"其他窗口\"></a>其他窗口</h3><p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204174811611.png\" alt=\"image-20221204174811611\"></p>\n<p>按下F1 可以打开帮助模式，快速打开某个类的文档</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204180158101.png\" alt=\"image-20221204180158101\"></p>\n<p>定位器切换</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204180410545.png\" alt=\"image-20221204180410545\"></p>\n<h3 id=\"Qt-Creator配置\"><a href=\"#Qt-Creator配置\" class=\"headerlink\" title=\"Qt Creator配置\"></a>Qt Creator配置</h3><p>一般情况下无需修改Qt默认配置，安装Qt后会自动连接。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204175055659.png\" alt=\"image-20221204175055659\"></p>\n<h3 id=\"Qt-Assistant-Qt助手\"><a href=\"#Qt-Assistant-Qt助手\" class=\"headerlink\" title=\"Qt Assistant(Qt助手)\"></a>Qt Assistant(Qt助手)</h3><p>Qt Assistant是可配置且可重新发布的文档阅读器，可以方便地进行定制，并与Qt应用程序一起重新发布。<br>它的功能有：</p>\n<blockquote>\n<p>定制Qt Assistant并与应用程序一起重新发布。<br>快速查找关键词、全文本搜索、生成索引和书签。<br>同时为多个帮助文档集合建立索引并进行搜索。<br>在本地存放文档或在应用程序中提供在线帮助。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204181021416.png\" alt=\"image-20221204181021416\"></p>\n<h3 id=\"Qt-Designer-Qt设计师\"><a href=\"#Qt-Designer-Qt设计师\" class=\"headerlink\" title=\"Qt Designer(Qt设计师)\"></a>Qt Designer(Qt设计师)</h3><p>Qt Designer是强大的跨平台GUI布局和格式构建器。由于使用了与应用程序中将要使用的相同部件，可以使用屏幕上的格式快速设计、创建部件以及对话框。使用Qt Designer创建的界面样式功能齐全并可以进行预览，这样就可确保其外观完全符合要求。<br>功能和优势有：</p>\n<blockquote>\n<p>使用拖放功能快速设计用户界面。<br>定制部件或从标准部件库中选择部件。<br>以本地外观快速预览格式。<br>通过界面原型生成C十十、Java或Python代码。<br>将Qt Designer与Visual Studio或Eclipse IDE配合使用。<br>使用Qt信号与槽机制构建功能齐全的用户界面。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204184311661.png\" alt=\"image-20221204184311661\"></p>\n<h3 id=\"Qt-Linguist-Qt语言家\"><a href=\"#Qt-Linguist-Qt语言家\" class=\"headerlink\" title=\"Qt Linguist(Qt语言家)\"></a>Qt Linguist(Qt语言家)</h3><p>Qt Linguist提供了一套加速应用程序翻译和国际化的工具。Qt使用单一的源码树和单一的应用程序二进制包就可以同时支持多个语言和书写系统。<br>主要功能有：</p>\n<blockquote>\n<p>收集所有UI文本，并通过简单的应用程序提供给翻译人员。<br>语言和字体感知外观。<br>通过智能的合并工具快速为现有应用程序增加新的语言。<br>Unicode编码支持世界上大多数字母。<br>运行时可切换从左向右或从右向左的语言。<br>在一个文档中混合多种语言。<br>可以使用Qt Linguist来使应用程序支持多种语言。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/gh/MearcDada/FigureBed//blog//image-20221204182654423.png\" alt=\"image-20221204182654423\"></p>\n","categories":[{"name":"工具使用","path":"api/categories/工具使用.json"}],"tags":[{"name":"Qt","path":"api/tags/Qt.json"}]}